utils/dbConnect.js

Fetch and display available plans:

To fetch and display available plans, you can create an API route in Next.js to retrieve data from your database (assuming MongoDB in this example) and then render the plans on a page:


Set up MongoDB connection:
>>npm install mongoose

utils/dbConnect.js

// utils/dbConnect.js

import mongoose from 'mongoose';

const MONGODB_URI = 'your_mongodb_uri';

if (!MONGODB_URI) {
  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');
}

let cached = global.mongoose;

if (!cached) {
  cached = global.mongoose = { conn: null, promise: null };
}

async function dbConnect() {
  if (cached.conn) {
    return cached.conn;
  }

  if (!cached.promise) {
    const options = {
      useCreateIndex: true,
      useNewUrlParser: true,
      useUnifiedTopology: true,
    };

    cached.promise = mongoose.connect(MONGODB_URI, options).then((mongoose) => {
      return mongoose;
    });
  }
  cached.conn = await cached.promise;
  return cached.conn;
}

export default dbConnect;